from git import Repo
import json
import os


def clone_git_from_json(project_path, repo_url):
    try:
        Repo.clone_from(repo_url, project_path)
    except:
        print(f"{repo_url} already exists")


def generate_settings():
    if not os.path.exists("settings.json"):
        with open("settings.json", "w") as f:
            json.dump([], f)

    with open("settings.json", "r") as file:
        data = json.load(file)
        cur_dir = os.path.join(os.getcwd(), "examples")
        for folder in os.listdir("./examples"):
            new_project = {
                "project_folder": os.path.join(cur_dir, folder),
                "obfuscations": []
            }
            data.append(new_project)
    with open("settings.json", "w") as file:
        json.dump(data, file, indent=4)


if __name__ == "__main__":
    if not os.path.exists("./examples"):
        os.makedirs("./examples")

    local_path = os.path.join(os.getcwd(), "examples")
    with open("malware.json", "rb") as f:
        mal = json.load(f)
    for malware in mal:
        name = malware['name']
        repo_url = malware['git_url']
        type = malware['type']
        specific_path = os.path.join(local_path, f"./{name}")
        clone_git_from_json(specific_path, repo_url)
    generate_settings()
